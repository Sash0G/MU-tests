name: Build and Release APK
on:
  push:
permissions:
  contents: write
  issues: write
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Set execute permissions for gradlew
        run: chmod +x gradlew
      
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Decode keystore file
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        run: |
          mkdir -p ~/.gradle/daemon/8.9
          echo "$KEYSTORE_FILE" | base64 --decode >  ~/.gradle/daemon/8.9/debug.keystore
          if [ ! -s ~/.gradle/daemon/8.9/debug.keystore ]; then
            echo "Decoding failed, or the keystore file is empty."
            exit 1
          fi

      - name: Verify keystore file content
        run: |
          echo "Encoded keystore content:"
          base64 ~/.gradle/daemon/8.9/debug.keystore || echo "Failed to read keystore content"
      - name: Set correct permissions on keystore
        run: chmod 644 ~/.gradle/daemon/8.9/debug.keystore
      - name: Build APK
        run: |
            ./gradlew assembleDebug \
            -Pandroid.injected.signing.store.file=debug.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.DEBUG_STORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.DEBUG_KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.DEBUG_KEY_PASSWORD }}
        
      - name: Upload APK as Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: androidApp/build/outputs/apk/debug/androidApp-debug.apk
          tag_name: '${{ github.event.head_commit.message }}'
          name: 'Release_${{ github.event.head_commit.message }}'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          
      - name: Clean up
        run: ./gradlew clean
